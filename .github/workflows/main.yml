name: CI

on:
  push:
    branches: [ master, develop, py3 ]
  pull_request:
    branches: [ master, develop, py3 ]

jobs:
  build:

    runs-on: ubuntu-latest
    strategy:
      matrix:
        python: [2.7]

    steps:
      - uses: actions/checkout@v2
        with:
          lfs: true

      - name: Install Gurobi
        run: |
          wget https://packages.gurobi.com/9.0/gurobi9.0.2_linux64.tar.gz -O gurobi9.0.2_linux64.tar.gz
          tar xvzf gurobi9.0.2_linux64.tar.gz
          (cd gurobi902/linux64/src/build && make)
          (cd gurobi902/linux64/lib && ln -f -s ../src/build/libgurobi_c++.a libgurobi_c++.a)
          echo ::set-env name=GUROBI_HOME::$(realpath gurobi902)

      - name: Activate Gurobi License
        run: |
          (cd gurobi902/linux64/bin && ./grbgetkey -q ${{ secrets.GUROBI_KEYCODE }})
          echo ::set-env name=GRB_LICENSE_FILE::/home/runner/gurobi.lic
        continue-on-error: true

      - name: Install SAMtools
        run: |
          wget https://sourceforge.net/projects/samtools/files/samtools/1.7/samtools-1.7.tar.bz2/download -O samtools-1.7.tar.bz2
          tar xvjf samtools-1.7.tar.bz2
          (cd samtools-1.7 && ./configure && make)
          echo ::set-env name=HATCHET_PATHS_SAMTOOLS::$(realpath samtools-1.7)

      - name: Install BCFTools
        run: |
          wget https://sourceforge.net/projects/samtools/files/samtools/1.7/bcftools-1.7.tar.bz2/download -O bcftools-1.7.tar.bz2
          tar xvjf bcftools-1.7.tar.bz2
          (cd bcftools-1.7 && ./configure && make)
          echo ::set-env name=HATCHET_PATHS_BCFTOOLS::$(realpath bcftools-1.7)

      - name: Download and index hg19.fa
        run: |
          wget https://hgdownload.soe.ucsc.edu/goldenPath/hg19/bigZips/hg19.fa.gz
          gunzip hg19.fa.gz
          $HATCHET_PATHS_SAMTOOLS/samtools faidx hg19.fa
          $HATCHET_PATHS_SAMTOOLS/samtools view -H -ht hg19.fa.fai /dev/null > hg19.dict
          echo ::set-env name=HATCHET_PATHS_HG19::$(realpath hg19.fa)

      - name: Setup Python
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python }}

      - name: Install Tox and any other packages
        run: |
          python -m pip install coverage tox tox-gh-actions

      - name: Test with tox
        run: |
          tox
        env:
          PLATFORM: ${{ matrix.python }}
          OMP_NUM_THREADS: 12

      - name: Convert coverage
        run: |
          python -m coverage xml

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v1
        with:
          fail_ci_if_error: true
